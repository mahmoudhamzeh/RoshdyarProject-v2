{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\RoshdyarProject\\\\roshdyar\\\\client\\\\src\\\\components\\\\GrowthChartPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport DatePicker from \"react-datepicker\";\nimport { format, differenceInMonths, parseISO } from 'date-fns';\nimport Modal from 'react-modal';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './GrowthChartPage.css';\nimport { heightForAgeBoys, weightForAgeBoys, heightForAgeGirls, weightForAgeGirls } from '../who-stats';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root');\nconst mergeData = (childBirthDate, growthData, whoData, dataKey) => {\n  if (!childBirthDate) return [];\n  const whoMap = new Map(whoData.map(item => [item.month, item]));\n  const growthMap = new Map();\n  growthData.forEach(record => {\n    try {\n      const ageInMonths = differenceInMonths(parseISO(record.date.replace(/\\//g, '-')), parseISO(childBirthDate.replace(/\\//g, '-')));\n      growthMap.set(ageInMonths, record[dataKey]);\n    } catch {}\n  });\n  const allMonths = new Set([...whoMap.keys(), ...growthMap.keys()]);\n  const combined = Array.from(allMonths).map(month => {\n    var _whoMap$get, _whoMap$get2, _whoMap$get3;\n    return {\n      month,\n      P3: (_whoMap$get = whoMap.get(month)) === null || _whoMap$get === void 0 ? void 0 : _whoMap$get.P3,\n      P50: (_whoMap$get2 = whoMap.get(month)) === null || _whoMap$get2 === void 0 ? void 0 : _whoMap$get2.P50,\n      P97: (_whoMap$get3 = whoMap.get(month)) === null || _whoMap$get3 === void 0 ? void 0 : _whoMap$get3.P97,\n      [dataKey]: growthMap.get(month)\n    };\n  });\n  return combined.sort((a, b) => a.month - b.month);\n};\nconst getGrowthStatus = (ageInMonths, value, standardData) => {/* ... */};\nconst GrowthChartPage = () => {\n  _s();\n  const history = useHistory();\n  const {\n    childId\n  } = useParams();\n  const [child, setChild] = useState(null);\n  const [growthData, setGrowthData] = useState([]);\n  const [newRecord, setNewRecord] = useState({\n    date: new Date(),\n    height: '',\n    weight: ''\n  });\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isHistoryVisible, setIsHistoryVisible] = useState(false);\n  const fetchAllData = useCallback(async () => {\n    try {\n      const childRes = await fetch(`http://localhost:5000/api/children/${childId}`);\n      if (!childRes.ok) throw new Error('Child not found');\n      const childData = await childRes.json();\n      setChild(childData);\n      const growthRes = await fetch(`http://localhost:5000/api/growth/${childId}`);\n      const growthRecords = await growthRes.json();\n      setGrowthData(growthRecords);\n    } catch (error) {\n      history.push('/my-children');\n    }\n  }, [childId, history]);\n  useEffect(() => {\n    fetchAllData();\n  }, [fetchAllData]);\n  const handleFormSubmit = async e => {\n    e.preventDefault();\n    const formattedRecord = {\n      ...newRecord,\n      date: format(newRecord.date, 'yyyy/MM/dd')\n    };\n    try {\n      const response = await fetch(`http://localhost:5000/api/growth/${childId}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formattedRecord)\n      });\n      if (!response.ok) throw new Error('Failed to add record');\n      await fetchAllData(); // <<<--- RELIABLE RE-FETCH AFTER SUBMIT\n      setIsModalOpen(false);\n      setNewRecord({\n        date: new Date(),\n        height: '',\n        weight: ''\n      });\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n  const handleDeleteRecord = async date => {/* ... */};\n  if (!child) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"\\u062F\\u0631 \\u062D\\u0627\\u0644 \\u0628\\u0627\\u0631\\u06AF\\u0630\\u0627\\u0631\\u06CC...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 24\n  }, this);\n  const latestRecord = growthData.length > 0 ? growthData[growthData.length - 1] : null;\n  const heightStandard = child.gender === 'girl' ? heightForAgeGirls : heightForAgeBoys;\n  const weightStandard = child.gender === 'girl' ? weightForAgeGirls : weightForAgeBoys;\n  const mergedHeightData = mergeData(child.birthDate, growthData, heightStandard, 'height');\n  const mergedWeightData = mergeData(child.birthDate, growthData, weightStandard, 'weight');\n  let heightStatus, weightStatus;\n  if (latestRecord) {/* ... */}\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"growth-chart-page\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\n_s(GrowthChartPage, \"Z+9vp9w6lcG6MwEOLr71czxZtyI=\", false, function () {\n  return [useHistory, useParams];\n});\n_c = GrowthChartPage;\nexport default GrowthChartPage;\nvar _c;\n$RefreshReg$(_c, \"GrowthChartPage\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useHistory","useParams","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","DatePicker","format","differenceInMonths","parseISO","Modal","heightForAgeBoys","weightForAgeBoys","heightForAgeGirls","weightForAgeGirls","jsxDEV","_jsxDEV","setAppElement","mergeData","childBirthDate","growthData","whoData","dataKey","whoMap","Map","map","item","month","growthMap","forEach","record","ageInMonths","date","replace","set","allMonths","Set","keys","combined","Array","from","_whoMap$get","_whoMap$get2","_whoMap$get3","P3","get","P50","P97","sort","a","b","getGrowthStatus","value","standardData","GrowthChartPage","_s","history","childId","child","setChild","setGrowthData","newRecord","setNewRecord","Date","height","weight","isModalOpen","setIsModalOpen","isHistoryVisible","setIsHistoryVisible","fetchAllData","childRes","fetch","ok","Error","childData","json","growthRes","growthRecords","error","push","handleFormSubmit","e","preventDefault","formattedRecord","response","method","headers","body","JSON","stringify","alert","message","handleDeleteRecord","children","fileName","_jsxFileName","lineNumber","columnNumber","latestRecord","length","heightStandard","gender","weightStandard","mergedHeightData","birthDate","mergedWeightData","heightStatus","weightStatus","className","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/RoshdyarProject/roshdyar/client/src/components/GrowthChartPage.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\nimport DatePicker from \"react-datepicker\";\r\nimport { format, differenceInMonths, parseISO } from 'date-fns';\r\nimport Modal from 'react-modal';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport './GrowthChartPage.css';\r\nimport { heightForAgeBoys, weightForAgeBoys, heightForAgeGirls, weightForAgeGirls } from '../who-stats';\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst mergeData = (childBirthDate, growthData, whoData, dataKey) => {\r\n    if (!childBirthDate) return [];\r\n    const whoMap = new Map(whoData.map(item => [item.month, item]));\r\n    const growthMap = new Map();\r\n    growthData.forEach(record => {\r\n        try {\r\n            const ageInMonths = differenceInMonths(parseISO(record.date.replace(/\\//g, '-')), parseISO(childBirthDate.replace(/\\//g, '-')));\r\n            growthMap.set(ageInMonths, record[dataKey]);\r\n        } catch {}\r\n    });\r\n    const allMonths = new Set([...whoMap.keys(), ...growthMap.keys()]);\r\n    const combined = Array.from(allMonths).map(month => ({ month, P3: whoMap.get(month)?.P3, P50: whoMap.get(month)?.P50, P97: whoMap.get(month)?.P97, [dataKey]: growthMap.get(month) }));\r\n    return combined.sort((a, b) => a.month - b.month);\r\n};\r\n\r\nconst getGrowthStatus = (ageInMonths, value, standardData) => { /* ... */ };\r\n\r\nconst GrowthChartPage = () => {\r\n    const history = useHistory();\r\n    const { childId } = useParams();\r\n    const [child, setChild] = useState(null);\r\n    const [growthData, setGrowthData] = useState([]);\r\n    const [newRecord, setNewRecord] = useState({ date: new Date(), height: '', weight: '' });\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n    const [isHistoryVisible, setIsHistoryVisible] = useState(false);\r\n\r\n    const fetchAllData = useCallback(async () => {\r\n        try {\r\n            const childRes = await fetch(`http://localhost:5000/api/children/${childId}`);\r\n            if (!childRes.ok) throw new Error('Child not found');\r\n            const childData = await childRes.json();\r\n            setChild(childData);\r\n            const growthRes = await fetch(`http://localhost:5000/api/growth/${childId}`);\r\n            const growthRecords = await growthRes.json();\r\n            setGrowthData(growthRecords);\r\n        } catch (error) { history.push('/my-children'); }\r\n    }, [childId, history]);\r\n\r\n    useEffect(() => { fetchAllData(); }, [fetchAllData]);\r\n\r\n    const handleFormSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const formattedRecord = { ...newRecord, date: format(newRecord.date, 'yyyy/MM/dd') };\r\n        try {\r\n            const response = await fetch(`http://localhost:5000/api/growth/${childId}`, { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(formattedRecord) });\r\n            if (!response.ok) throw new Error('Failed to add record');\r\n            await fetchAllData(); // <<<--- RELIABLE RE-FETCH AFTER SUBMIT\r\n            setIsModalOpen(false);\r\n            setNewRecord({ date: new Date(), height: '', weight: '' });\r\n        } catch (error) { alert(error.message); }\r\n    };\r\n\r\n    const handleDeleteRecord = async (date) => { /* ... */ };\r\n\r\n    if (!child) return <p>در حال بارگذاری...</p>;\r\n    \r\n    const latestRecord = growthData.length > 0 ? growthData[growthData.length - 1] : null;\r\n    const heightStandard = child.gender === 'girl' ? heightForAgeGirls : heightForAgeBoys;\r\n    const weightStandard = child.gender === 'girl' ? weightForAgeGirls : weightForAgeBoys;\r\n    const mergedHeightData = mergeData(child.birthDate, growthData, heightStandard, 'height');\r\n    const mergedWeightData = mergeData(child.birthDate, growthData, weightStandard, 'weight');\r\n    let heightStatus, weightStatus;\r\n    if (latestRecord) { /* ... */ }\r\n\r\n    return (\r\n        <div className=\"growth-chart-page\">{/* ... The full and correct JSX from previous steps ... */}</div>\r\n    );\r\n};\r\n\r\nexport default GrowthChartPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}