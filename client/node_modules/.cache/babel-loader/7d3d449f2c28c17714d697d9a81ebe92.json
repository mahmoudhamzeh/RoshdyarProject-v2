{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\RoshdyarProject\\\\roshdyar\\\\client\\\\src\\\\components\\\\EditChildPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport DatePicker from \"react-datepicker\";\nimport { format, parseISO } from 'date-fns';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './AddChildPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditChildPage = () => {\n  _s();\n  const history = useHistory();\n  const {\n    id\n  } = useParams();\n  const [formData, setFormData] = useState(null);\n  const [birthDate, setBirthDate] = useState(new Date());\n  const [avatarFile, setAvatarFile] = useState(null);\n  const [preview, setPreview] = useState(null);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  useEffect(() => {\n    const fetchChildData = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/api/children/${id}`);\n        if (!response.ok) throw new Error('Child not found');\n        const data = await response.json();\n        const nameParts = data.name.split(' ') || [];\n        data.firstName = nameParts[0] || '';\n        data.lastName = nameParts.slice(1).join(' ') || '';\n        setFormData(data);\n        if (data.birthDate) setBirthDate(parseISO(data.birthDate.replace(/\\//g, '-')));\n        if (data.avatar) setPreview(data.avatar.startsWith('/uploads') ? `http://localhost:5000${data.avatar}` : data.avatar);\n      } catch (error) {\n        history.push('/my-children');\n      }\n    };\n    fetchChildData();\n  }, [id, history]);\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      files\n    } = e.target;\n    if (name === \"avatar\" && files && files[0]) {\n      setAvatarFile(files[0]);\n      setPreview(URL.createObjectURL(files[0]));\n    } else {\n      setFormData(prevState => ({\n        ...prevState,\n        [name]: value\n      }));\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setIsSubmitting(true);\n    let avatarPath = formData.avatar;\n    if (avatarFile) {\n      const uploadData = new FormData();\n      uploadData.append('avatar', avatarFile);\n      try {\n        const uploadRes = await fetch('http://localhost:5000/api/upload', {\n          method: 'POST',\n          body: uploadData\n        });\n        if (!uploadRes.ok) throw new Error('Failed to upload new image');\n        const result = await uploadRes.json();\n        avatarPath = result.filePath;\n      } catch (error) {\n        alert(error.message);\n        setIsSubmitting(false);\n        return;\n      }\n    }\n    try {\n      // The main fix is here: we construct the 'name' field before sending\n      const finalData = {\n        ...formData,\n        name: `${formData.firstName} ${formData.lastName}`.trim(),\n        birthDate: format(birthDate, 'yyyy/MM/dd'),\n        avatar: avatarPath\n      };\n      delete finalData.firstName; // No longer needed\n      delete finalData.lastName; // No longer needed\n\n      const response = await fetch(`http://localhost:5000/api/children/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(finalData)\n      });\n      if (!response.ok) throw new Error('Failed to update child info');\n      alert('تغییرات با موفقیت ذخیره شد!');\n      history.push('/my-children');\n    } catch (error) {\n      alert(error.message);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  if (!formData) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"\\u062F\\u0631 \\u062D\\u0627\\u0644 \\u0628\\u0627\\u0631\\u06AF\\u0630\\u0627\\u0631\\u06CC...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 27\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-child-page-v2\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"page-nav-final\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => history.push('/my-children'),\n        className: \"back-btn-add-child\",\n        children: \"\\u2192\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 45\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"\\u0648\\u06CC\\u0631\\u0627\\u06CC\\u0634 \\u0627\\u0637\\u0644\\u0627\\u0639\\u0627\\u062A \", formData.firstName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 144\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nav-placeholder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 188\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-child-form-container-v2\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"add-child-form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n_s(EditChildPage, \"n8wbmbSiQnZchN7+hoJ2aglfrWQ=\", false, function () {\n  return [useHistory, useParams];\n});\n_c = EditChildPage;\nexport default EditChildPage;\nvar _c;\n$RefreshReg$(_c, \"EditChildPage\");","map":{"version":3,"names":["React","useState","useEffect","useHistory","useParams","DatePicker","format","parseISO","jsxDEV","_jsxDEV","EditChildPage","_s","history","id","formData","setFormData","birthDate","setBirthDate","Date","avatarFile","setAvatarFile","preview","setPreview","isSubmitting","setIsSubmitting","fetchChildData","response","fetch","ok","Error","data","json","nameParts","name","split","firstName","lastName","slice","join","replace","avatar","startsWith","error","push","handleChange","e","value","files","target","URL","createObjectURL","prevState","handleSubmit","preventDefault","avatarPath","uploadData","FormData","append","uploadRes","method","body","result","filePath","alert","message","finalData","trim","headers","JSON","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","onSubmit","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/RoshdyarProject/roshdyar/client/src/components/EditChildPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport DatePicker from \"react-datepicker\";\r\nimport { format, parseISO } from 'date-fns';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport './AddChildPage.css';\r\n\r\nconst EditChildPage = () => {\r\n    const history = useHistory();\r\n    const { id } = useParams();\r\n    const [formData, setFormData] = useState(null);\r\n    const [birthDate, setBirthDate] = useState(new Date());\r\n    const [avatarFile, setAvatarFile] = useState(null);\r\n    const [preview, setPreview] = useState(null);\r\n    const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchChildData = async () => {\r\n            try {\r\n                const response = await fetch(`http://localhost:5000/api/children/${id}`);\r\n                if (!response.ok) throw new Error('Child not found');\r\n                const data = await response.json();\r\n                const nameParts = data.name.split(' ') || [];\r\n                data.firstName = nameParts[0] || '';\r\n                data.lastName = nameParts.slice(1).join(' ') || '';\r\n                setFormData(data);\r\n                if (data.birthDate) setBirthDate(parseISO(data.birthDate.replace(/\\//g, '-')));\r\n                if (data.avatar) setPreview(data.avatar.startsWith('/uploads') ? `http://localhost:5000${data.avatar}` : data.avatar);\r\n            } catch (error) { history.push('/my-children'); }\r\n        };\r\n        fetchChildData();\r\n    }, [id, history]);\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value, files } = e.target;\r\n        if (name === \"avatar\" && files && files[0]) {\r\n            setAvatarFile(files[0]);\r\n            setPreview(URL.createObjectURL(files[0]));\r\n        } else {\r\n            setFormData(prevState => ({ ...prevState, [name]: value }));\r\n        }\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setIsSubmitting(true);\r\n        let avatarPath = formData.avatar;\r\n\r\n        if (avatarFile) {\r\n            const uploadData = new FormData();\r\n            uploadData.append('avatar', avatarFile);\r\n            try {\r\n                const uploadRes = await fetch('http://localhost:5000/api/upload', { method: 'POST', body: uploadData });\r\n                if (!uploadRes.ok) throw new Error('Failed to upload new image');\r\n                const result = await uploadRes.json();\r\n                avatarPath = result.filePath;\r\n            } catch (error) { alert(error.message); setIsSubmitting(false); return; }\r\n        }\r\n\r\n        try {\r\n            // The main fix is here: we construct the 'name' field before sending\r\n            const finalData = { \r\n                ...formData, \r\n                name: `${formData.firstName} ${formData.lastName}`.trim(),\r\n                birthDate: format(birthDate, 'yyyy/MM/dd'), \r\n                avatar: avatarPath \r\n            };\r\n            delete finalData.firstName; // No longer needed\r\n            delete finalData.lastName;  // No longer needed\r\n\r\n            const response = await fetch(`http://localhost:5000/api/children/${id}`, { method: 'PUT', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(finalData) });\r\n            if (!response.ok) throw new Error('Failed to update child info');\r\n            alert('تغییرات با موفقیت ذخیره شد!');\r\n            history.push('/my-children');\r\n        } catch (error) { alert(error.message); }\r\n        finally { setIsSubmitting(false); }\r\n    };\r\n\r\n    if (!formData) return <p>در حال بارگذاری...</p>;\r\n\r\n    return (\r\n        <div className=\"add-child-page-v2\">\r\n            <nav className=\"page-nav-final\"><button onClick={() => history.push('/my-children')} className=\"back-btn-add-child\">&rarr;</button><h1>ویرایش اطلاعات {formData.firstName}</h1><div className=\"nav-placeholder\"></div></nav>\r\n            <div className=\"add-child-form-container-v2\">\r\n                <form onSubmit={handleSubmit} className=\"add-child-form\">\r\n                    {/* ... (The rest of the form JSX is the same as the last correct version) ... */}\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditChildPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}